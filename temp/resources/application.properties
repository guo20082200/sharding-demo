# \u5E94\u7528\u540D\u79F0
spring.application.name=sharding-jdbc-demo
# \u5F00\u53D1\u73AF\u5883\u8BBE\u7F6E
spring.profiles.active=dev

# ==== ShardingSphere Jdbc \u8BFB\u5199\u5206\u79BB\u914D\u7F6E ====
# Mode\u6A21\u578B\u914D\u7F6E\uFF0C\u6A21\u578B\u7C7B\u578B\u53EF\u53D6\u503C\uFF1AMemory, Standalone, Cluster
spring.shardingsphere.mode.type=Standalone

# \u6570\u636E\u6E90\u914D\u7F6E\uFF08\u4E00\u4E3B\u4E24\u4ECE\uFF09
spring.shardingsphere.datasource.names=master,slave1

spring.shardingsphere.datasource.master.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.master.driver-class-name=org.postgresql.Driver
spring.shardingsphere.datasource.master.jdbc-url=jdbc:postgresql://172.16.23.77:10031/testdb
spring.shardingsphere.datasource.master.username=postgres
spring.shardingsphere.datasource.master.password=123456

spring.shardingsphere.datasource.slave1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave1.driver-class-name=org.postgresql.Driver
spring.shardingsphere.datasource.slave1.jdbc-url=jdbc:postgresql://172.16.23.77:10032/testdb
spring.shardingsphere.datasource.slave1.username=postgres
spring.shardingsphere.datasource.slave1.password=123456

#spring.shardingsphere.datasource.slave2.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.slave2.driver-class-name=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.slave2.jdbc-url=jdbc:mysql://192.168.10.1:13308/sharding-jdbc-demo
#spring.shardingsphere.datasource.slave2.username=root
#spring.shardingsphere.datasource.slave2.password=123456

# \u8BFB\u5199\u5206\u79BB\u89C4\u5219\u914D\u7F6E\uFF0C \u7C7B\u578B\u53EF\u53D6\u503C: Static\uFF0CDynamic
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.type=Static
# \u6307\u5B9A\u8BFB\u5199\u6570\u636E\u6E90\u540D\u79F0
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.props.write-data-source-name=master
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.props.read-data-source-names=slave1
# \u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5\u540D\u79F0
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.load-balancer-name=alg_round
# \u8D1F\u8F7D\u5747\u8861\u7B97\u6CD5\u914D\u7F6E
spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_round.type=ROUND_ROBIN
spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_random.type=RANDOM
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_weight.type=WEIGHT
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_weight.props.slave1=1
#spring.shardingsphere.rules.readwrite-splitting.load-balancers.alg_weight.props.slave2=2

# \u6253\u5370SQl
spring.shardingsphere.props.sql-show=true